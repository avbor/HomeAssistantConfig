substitutions:
  board_name: smartir_03
  esp_platform: ESP8266
  esp_board: esp01_1m
  room_name: livingroom

packages:
  wifi: !include common/wifi.yaml
  device_base: !include common/device_base.yaml

esphome:
  includes: 
    - include/daikin_ir_v2.h
  libraries:
    - IRremoteESP8266

# Use the blue LED as a status light.
#   Blink slowly = Temporary issue (WiFi/MQTT disconnected, sensor unavailable, ...)
#   Blink quickly = Error encountered
status_led:
  pin: 
    number: GPIO4

#remote_receiver:
#  id: rcvr
#  pin: 
#    number: GPIO5
#    inverted: True
#  dump: all

remote_transmitter:
  pin:
    number: GPIO14
    inverted: false
  carrier_duty_percent: 50%

sensor:
  - platform: homeassistant
    name: "Current temperature"
    entity_id: sensor.temperature_in_${room_name}
    id: ha_temp_${room_name}
    internal: true
    unit_of_measurement: Â°C
    accuracy_decimals: 1

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO13
      inverted: true
    internal: true
    name: ${board_name} Button
    id: btn

climate:
  - platform: custom
    lambda: |-
      auto daikinac = new DaikinAC();
      daikinac->set_sensor(id(ha_temp_${room_name}));
      App.register_component(daikinac);
      return {daikinac};
    climates:
      - name: "Daikin Livingroom"
      #receiver_id: rcvr

#  - platform: heatpumpir
#    name: "Test AC - heatpumpir"
#    protocol: daikin_arc480
#    horizontal_default: auto
#    vertical_default: auto
#    min_temperature: 18.0
#    max_temperature: 30.0
#    sensor: ha_temp_${room_name}