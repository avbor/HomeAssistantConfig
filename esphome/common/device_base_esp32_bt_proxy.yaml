esphome:
  name: ${board_name}

esp32:
  board: ${esp_board}
  framework:
    type: esp-idf

improv_serial:

logger:

api:
  encryption:
    key: !secret esphome_api_key
  reboot_timeout: 5min

ota:
  - platform: esphome
    password: !secret esphome_ota_password

time:
  - platform: homeassistant
    id: homeassistant_time

sensor:
  - platform: wifi_signal
    name: ${board_name} RSSI
    update_interval: 60s
    internal: false

binary_sensor:
  - platform: status
    name: ${board_name} Status
    internal: false

button:
  - platform: restart
    name: ${board_name} Restart

  - platform: safe_mode
    name: ${board_name} Restart (Safe Mode)
#    entity_category: diagnostic

  - platform: template
    name: ${board_name} BLE Active Scan
    id: run_active_scan
    on_press:
    - script.execute: ble_active_scan

script:
  # set_scan_active = bool
  # set_scan_duration = milliseconds
  # set_scan_interval = milliseconds / 0.625 (example: 450ms / 0.625 = 720)
  # set_scan_window = milliseconds / 0.625 (example: 160ms / 0.625 = 256)
  # set_scan_continuous = bool
  - id: ble_active_scan
    mode: single
    then:
    - lambda: |-
        id(ble_tracker_id).stop_scan();
    - delay: 2s
    - lambda: |-
        id(ble_tracker_id).set_scan_active(true);
        id(ble_tracker_id).set_scan_duration(10);
        id(ble_tracker_id).set_scan_interval(720);
        id(ble_tracker_id).set_scan_window(256);
        id(ble_tracker_id).set_scan_continuous(true);
        id(ble_tracker_id).start_scan();
    - logger.log: 
        format: Active scan started
        level: INFO
    - delay: 30s
    - logger.log: 
        format: Active scan stopped
        level: INFO
    - lambda: |-
        id(ble_tracker_id).stop_scan();
    - delay: 2s
    - lambda: |-
        id(ble_tracker_id).set_scan_active(false);
        id(ble_tracker_id).set_scan_duration(10);
        id(ble_tracker_id).set_scan_interval(720);
        id(ble_tracker_id).set_scan_window(256);
        id(ble_tracker_id).set_scan_continuous(true);
        id(ble_tracker_id).start_scan();

interval:
  - interval: 30min
    then:
    - script.execute: ble_active_scan