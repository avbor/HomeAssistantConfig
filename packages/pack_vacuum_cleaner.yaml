#################################################
# Package Vacuum Cleaner
#################################################
vacuum_cleaner:

  # Map
#  camera:

#    - platform: xiaomi_cloud_map_extractor
#      name: Mi Vacuum Cleaner 1S Cam
#      host: 172.16.16.219
#      token: !secret mi_vacuum_1s_token
#      username: !secret xiaomi_cloud_username
#      password: !secret xiaomi_cloud_password
#      country: 'cn'
#      draw: ["all"]
#      colors:
#        color_charger: [0, 255, 0, 180]
#        color_robo: [0, 0, 255]
#      map_transformation:
#        scale: 2
#        trim:
#          top: 10
#          bottom: 20
#          left: 20
#          right: 17
#      attributes:
#        - calibration_points
#        - vacuum_position
#      #auto_update: true
#      scan_interval: 15

  # Input Select
  input_select:

    room_to_vacuum:
      name: "Где убрать:"
      options:
        - Прихожая
        - Детская
        - Гостинная
        - Кухня
        - Спальня
      initial: Прихожая
      icon: mdi:crosshairs-gps

    vacuum_power:
      name: "Выбор режима:"
      options:
        - Silent
        - Standard
        - Medium
        - Turbo
        - Gentle
      initial: Standard
      icon: mdi:speedometer

  # Sensors
  sensor:

    - platform: template
      sensors:
        mirobot_1s_current_fan_speed:
          value_template: "{{ state_attr('vacuum.xiaomi_vacuum_cleaner', 'fan_speed') }}"
        mirobot_1s_battery:
          friendly_name: "Xiaomi Vacuum Cleaner 1S"
          device_class: battery
          unit_of_measurement: "%"
          icon_template: >
            {% if not state_attr('vacuum.xiaomi_vacuum_cleaner', 'battery_icon') %}mdi:battery-unknown
            {% else %}{{state_attr('vacuum.xiaomi_vacuum_cleaner', 'battery_icon')}}
            {% endif %}
          value_template: "{{ state_attr('vacuum.xiaomi_vacuum_cleaner', 'battery_level') }}"
        mirobot_1s_main_brush_left:
          friendly_name: "Main brush hours remaining"
          unit_of_measurement: "h"
          value_template: "{{ ((states('sensor.xiaomi_vacuum_cleaner_main_brush_left') | int(0)) / 3600) | round(0) }}"
        mirobot_1s_side_brush_left:
          friendly_name: "Side brush hours remaining"
          unit_of_measurement: "h"
          value_template: "{{ ((states('sensor.xiaomi_vacuum_cleaner_side_brush_left') | int(0)) / 3600) | round(0) }}"
        mirobot_1s_filter_left:
          friendly_name: "Filter hours remaining"
          unit_of_measurement: "h"
          value_template: "{{ ((states('sensor.xiaomi_vacuum_cleaner_filter_left') | int(0)) / 3600) | round(0) }}"
        mirobot_1s_sensor_dirty_left:
          friendly_name: "Sensors hours remaining"
          unit_of_measurement: "h"
          value_template: "{{ ((states('sensor.xiaomi_vacuum_cleaner_sensor_dirty_left') | int(0)) / 3600) | round(0) }}"

  # Scripts
  script:

    start_vacuum_room:
      alias: "Clean Selected Room [Mi Robot]"
      sequence:
        - action: script.turn_on
          target:
            entity_id: >-
              {% if is_state("input_select.room_to_vacuum", "Прихожая") %}
                script.start_vacuum_hallway
              {% elif is_state("input_select.room_to_vacuum", "Детская") %}
                script.start_vacuum_nursery
              {% elif is_state("input_select.room_to_vacuum", "Гостинная") %}
                script.start_vacuum_living_room
              {% elif is_state("input_select.room_to_vacuum", "Кухня") %}
                script.start_vacuum_kitchen
              {% elif is_state("input_select.room_to_vacuum", "Спальня") %}
                script.start_vacuum_bedroom
              {% endif %}

    start_vacuum_hallway_by_door_sensor:
      alias: "Clean Hallway by Door Sensor [Mi Robot]"
      sequence:
        - delay:
            minutes: 8
        - action: vacuum.set_fan_speed
          target:
            entity_id: vacuum.xiaomi_vacuum_cleaner
          data:
            fan_speed: Standard
        - action: script.turn_on
          target:
            entity_id: script.start_vacuum_hallway

    start_vacuum_hallway:
      alias: "Clean Hallway [Mi Robot]"
      sequence:
        - action: vacuum.send_command
          target:
            entity_id: vacuum.xiaomi_vacuum_cleaner
          data:
            command: app_segment_clean
            params: [17]

    start_vacuum_nursery:
      alias: "Clean Nursery [Mi Robot]"
      sequence:
        - action: vacuum.send_command
          target:
            entity_id: vacuum.xiaomi_vacuum_cleaner
          data:
            command: app_segment_clean
            params: [19]

    start_vacuum_living_room:
      alias: "Clean Living Room [Mi Robot]"
      sequence:
        - action: vacuum.send_command
          target:
            entity_id: vacuum.xiaomi_vacuum_cleaner
          data:
            command: app_segment_clean
            params: [16]

    start_vacuum_kitchen:
      alias: "Clean Kitchen [Mi Robot]"
      sequence:
        - action: vacuum.send_command
          target:
            entity_id: vacuum.xiaomi_vacuum_cleaner
          data:
            command: app_segment_clean
            params: [18]

    start_vacuum_bedroom:
      alias: "Clean Bedroom [Mi Robot]"
      sequence:
        - action: vacuum.send_command
          target:
            entity_id: vacuum.xiaomi_vacuum_cleaner
          data:
            command: app_segment_clean
            params: [20]

    set_vacuum_power_silent:
      sequence:
        action: vacuum.set_fan_speed
        target:
          entity_id: vacuum.xiaomi_vacuum_cleaner
        data:
          fan_speed: Silent

    set_vacuum_power_standard:
      sequence:
        action: vacuum.set_fan_speed
        target:
          entity_id: vacuum.xiaomi_vacuum_cleaner
        data:
          fan_speed: Standard

    set_vacuum_power_medium:
      sequence:
        action: vacuum.set_fan_speed
        target:
          entity_id: vacuum.xiaomi_vacuum_cleaner
        data:
          fan_speed: Medium

    set_vacuum_power_turbo:
      sequence:
        action: vacuum.set_fan_speed
        target:
          entity_id: vacuum.xiaomi_vacuum_cleaner
        data:
          fan_speed: Turbo

    set_vacuum_power_gentle:
      sequence:
        action: vacuum.set_fan_speed
        target:
          entity_id: vacuum.xiaomi_vacuum_cleaner
        data:
          fan_speed: Gentle

    reset_main_brush_left:
      sequence:
        - action: vacuum.send_command
          target:
            entity_id: vacuum.xiaomi_vacuum_cleaner
          data:
            command: reset_consumable
            params: ["main_brush_work_time"]

    reset_side_brush_work_time:
      sequence:
        - action: vacuum.send_command
          target:
            entity_id: vacuum.xiaomi_vacuum_cleaner
          data:
            command: reset_consumable
            params: ["side_brush_work_time"]

    reset_filter_work_time:
      sequence:
        - action: vacuum.send_command
          target:
            entity_id: vacuum.xiaomi_vacuum_cleaner
          data:
            command: reset_consumable
            params: ["filter_work_time"]

    reset_sensor_dirty_time:
      sequence:
        - action: vacuum.send_command
          target:
            entity_id: vacuum.xiaomi_vacuum_cleaner
          data:
            command: reset_consumable
            params: ["sensor_dirty_time"]

  # Automations
  automation:

    - alias: "Оповещение о начале уборки"
      id: 61fb954b-3450-4fc6-9848-cc5304b54a16
      triggers:
        trigger: state
        entity_id: vacuum.xiaomi_vacuum_cleaner
        to: "cleaning"
      conditions:
        condition: template
        value_template: >
          {{ trigger.from_state.state != 'unavailable'}}
      actions:
        - action: telegram_bot.send_message
          data:
            target: !secret tlg_group_flat_1
            message: "_Mi Robot_: начал уборку."
            inline_keyboard:
              - "Остановить:/vacuum_stop, На базу:/vacuum_go_home"

    - alias: "Vacuum - Telegram Control - Stop"
      id: 78e4ee4f-d0d7-4d23-9e3c-4ec125f19400
      triggers:
        trigger: event
        event_type: telegram_callback
        event_data:
          data: "/vacuum_stop"
      actions:
        - action: vacuum.pause
          target:
            entity_id: vacuum.xiaomi_vacuum_cleaner
        - action: telegram_bot.answer_callback_query
          data:
            callback_query_id: "{{ trigger.event.data.id }}"
            message: "Команда отправлена"
        - action: telegram_bot.edit_message
          data:
            message_id: "{{ trigger.event.data.message.message_id }}"
            chat_id: "{{ trigger.event.data.chat_id }}"
            message: |
              _Mi Robot_: начал уборку.
              Уборка остановлена.
            inline_keyboard:
              - "На базу:/vacuum_go_home"

    - alias: "Vacuum - Telegram Control - Go to Base"
      id: 0b1fd434-4044-4ce7-ab8a-262d6250407a
      triggers:
        trigger: event
        event_type: telegram_callback
        event_data:
          data: "/vacuum_go_home"
      actions:
        - action: vacuum.pause
          target:
            entity_id: vacuum.xiaomi_vacuum_cleaner
        - delay: 1
        - action: vacuum.return_to_base
          target:
            entity_id: vacuum.xiaomi_vacuum_cleaner
        - action: telegram_bot.answer_callback_query
          data:
            callback_query_id: "{{ trigger.event.data.id }}"
            message: "Команда отправлена"
        - action: telegram_bot.edit_message
          data:
            message_id: "{{ trigger.event.data.message.message_id }}"
            chat_id: "{{ trigger.event.data.chat_id }}"
            message: |
              _Mi Robot_: начал уборку.
              Уборка остановлена, робот отправлен на базу.

    - alias: "Оповещение о возращении пылесоса на базу [notify to group flat]"
      id: 68311ec4-1030-4d7d-a2ea-e9cb21f7f40c
      triggers:
        trigger: state
        entity_id: vacuum.xiaomi_vacuum_cleaner
        to: "docked"
      conditions:
        condition: template
        value_template: >
          {{ trigger.from_state.state != 'unavailable'}}
      actions:
        - action: notify.telegram_group_flat_1
          data:
            message: "_Mi Robot_: вернулся на базу (закончил уборку)."

    - alias: "Оповещение о забытом пылесосе [notify to group flat]"
      id: db76ec80-b5d6-4991-8a6c-9272b25c1a39
      triggers:
        trigger: state
        entity_id: vacuum.xiaomi_vacuum_cleaner
        to: "idle"
        for:
          minutes: 15
      actions:
        - action: notify.telegram_group_flat_1
          data:
            message: "_Mi Robot_: потерялся и бездельничает, отправляем на базу."
        - action: vacuum.return_to_base
          target:
            entity_id: vacuum.xiaomi_vacuum_cleaner

    - alias: "Оповещение об ошибке [notify to group flat]"
      id: fe6bb5c1-f886-4161-bad7-4bf04be83258
      triggers:
        trigger: state
        entity_id: vacuum.xiaomi_vacuum_cleaner
        to: "error"
      conditions:
        condition: template
        value_template: >
          {{ trigger.from_state.state != 'unavailable'}}
      actions:
        - action: notify.telegram_group_flat_1
          data:
            message: |
              _Mi Robot_: Произошла *ошибка*!
              {{ state_attr('vacuum.xiaomi_vacuum_cleaner', "error") }}

    - alias: "Ежедневная уборка по будням [утро]"
      id: 67acac52-bf44-4661-9140-2e40f0006175
      triggers:
        trigger: state
        entity_id: group.family_persons
        to: "not_home"
        for:
          minutes: 20
      conditions:
        - and:
          - condition: time
            after: "08:30:00"
            before: "10:30:00"
            weekday:
              - mon
              - tue
              - wed
              - thu
              - fri
          - condition: template
            value_template: "{{ now().day != states.automation.ezhednevnaia_uborka_po_budniam_utro.attributes.last_triggered.day | default(0) }}"
      actions:
        - action: vacuum.set_fan_speed
          target:
            entity_id: vacuum.xiaomi_vacuum_cleaner
          data:
            fan_speed: Turbo
        - action: vacuum.start
          target:
            entity_id: vacuum.xiaomi_vacuum_cleaner

    - alias: "Регулярная уборка прихожей"
      id: 6c64060c-0a65-4caf-8064-1d5cdfea50a3
      triggers:
        trigger: state
        entity_id: binary_sensor.0x158d00031c790f_contact
        from: "on"
        to: "off"
      conditions:
        - and:
          - condition: time
            after: "09:30:00"
            before: "21:30:00"
          - condition: template
            value_template: '{{ (as_timestamp(now())-(as_timestamp(state_attr("automation.reguliarnaia_uborka_prikhozhei", "last_triggered")))>480) }}'
          - or:
            - condition: state
              entity_id: vacuum.xiaomi_vacuum_cleaner
              state: "docked"
            - condition: state
              entity_id: vacuum.xiaomi_vacuum_cleaner
              state: "idle"
      actions:
        - action: script.turn_on
          target:
            entity_id: script.start_vacuum_hallway_by_door_sensor

    - alias: "Set cleaning mode"
      id: 8fef5cc1-030e-4549-91b4-ffe25207672c
      triggers:
        trigger: state
        entity_id: input_select.vacuum_power
      actions:
        - action: >
            {% if trigger.to_state.state == 'Silent' %}
              script.set_vacuum_power_silent
            {% elif trigger.to_state.state == 'Standard' %}
              script.set_vacuum_power_standard
            {% elif trigger.to_state.state == 'Medium' %}
              script.set_vacuum_power_medium
            {% elif trigger.to_state.state == 'Turbo' %}
              script.set_vacuum_power_turbo
            {% elif trigger.to_state.state == 'Gentle' %}
              script.set_vacuum_power_gentle
            {% endif %}
