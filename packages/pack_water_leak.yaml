#################################################
# Package Water Leak Protection
#################################################
water_leak_protection:

# Input Boolean
  input_boolean:

    neptun_activated:
      name: Neptune Activated
      icon: mdi:help-network

# Binary Sensors
  binary_sensor:

    - platform: template
      sensors:
        neptun_water_leakage:
          friendly_name: Датчики протечки Нептун
          device_class: 'moisture'
          value_template: >
            {{ is_state('input_boolean.neptun_activated', "on") }}

# Scripts
  script:

    neptun_state_reset:
      alias: Reset Neptun State in HA (TurnOff)
      sequence:
        - action: input_boolean.turn_off
          target:
            entity_id: input_boolean.neptun_activated

    water_valves_close:
      alias: "Закрытие водопроводных кранов"
      sequence:
        - action: switch.turn_on
          target:
            entity_id: switch.rele_aqara_vodoprovodnye_krany_l2
        - delay: '00:00:30'
        - action: switch.turn_off
          target:
            entity_id: switch.rele_aqara_vodoprovodnye_krany_l2

    water_valves_open:
      alias: "Открытие водопроводных кранов"
      sequence:
        - choose:
          - conditions:
            - condition: state
              entity_id: binary_sensor.neptun_water_leakage
              state: 'on'
            sequence:
              - action: switch.turn_off
                target:
                  entity_id: switch.sonoff_1000b68886
              - action: switch.turn_on
                target:
                  entity_id: switch.rele_aqara_vodoprovodnye_krany_l1
              - delay: '00:00:30'
              - action: switch.turn_off
                target:
                  entity_id: switch.rele_aqara_vodoprovodnye_krany_l1
              - action: switch.turn_on
                target:
                  entity_id: switch.sonoff_1000b68886
              - action: script.turn_on
                target:
                  entity_id: script.neptun_state_reset
          default:
            - action: switch.turn_on
              target:
                entity_id: switch.rele_aqara_vodoprovodnye_krany_l1
            - delay: '00:00:30'
            - action: switch.turn_off
              target:
                entity_id: switch.rele_aqara_vodoprovodnye_krany_l1

# Automations
  automation:

    # Защита от протечек - отключение подачи воды по датчикам
    - alias: Water Leak Detected
      id: 2eb96392-3d8a-41b7-87f2-7c6e5c5b6232
      triggers:
        trigger: state
        entity_id:
          - binary_sensor.neptun_water_leakage
          - binary_sensor.0x158d000400e77d_moisture
          - binary_sensor.0x158d0004030d84_moisture
          - binary_sensor.lumi_lumi_sensor_wleak_aq1_ias_zone
        from: 'off'
        to: 'on'
      actions:
        - action: script.turn_on
          target:
            entity_id: script.water_valves_close

    # Получение активации Нептуна
    - alias: Catch Neptun Activated
      id: 0e013823-d5f8-4362-b7aa-2be3c25da064
      mode: queued
      triggers:
        trigger: state
        entity_id: binary_sensor.lumi_lumi_sensor_magnet_opening
        from: 'on'
        to: 'off'
        for: "00:00:05"
      conditions:
        condition: state
        entity_id: input_boolean.neptun_activated
        state: 'off'
      actions:
        - action: input_boolean.turn_on
          target:
            entity_id: input_boolean.neptun_activated

    # Получение деактивации Нептуна
    - alias: Catch Neptun DeActivated
      id: f17481ec-0be2-4774-b2cb-53fffab68781
      mode: queued
      triggers:
        trigger: state
        entity_id: switch.sonoff_1000b68886
        from: 'off'
        to: 'on'
      conditions:
        condition: state
        entity_id: input_boolean.neptun_activated
        state: 'on'
      actions:
        - action: input_boolean.turn_off
          target:
            entity_id: input_boolean.neptun_activated

    # Перезагрузка контроллера Нептун раз в 2 недели (обход проворота кранов раз в месяц)
    - alias: Restart Neptun [twice a month]
      id: 896b9256-93fc-41d2-8ffc-a4c6503f62e0
      triggers:
        - trigger: time
          at: "11:00:00"
      conditions:
        - and:
          - condition: time
            weekday: mon
          - condition: template
            value_template: "{{ (as_timestamp(now())|timestamp_custom ('%W') | int % 2) == 1 }}"
      actions:
        - action: switch.turn_off
          target:
            entity_id: switch.sonoff_1000b68886
        - delay: 5
        - action: switch.turn_on
          target:
            entity_id: switch.sonoff_1000b68886
        - action: notify.telegram_group_flat_1
          data:
            message: |
              _INFO:_ Нептун был перезапущен.

    # Автоматическое отключение напряжения на кранах (работа >60 сек)
    - alias: PowerOff Valves After 60 Seconds
      id: ac6042cd-ab15-4ff2-a0ed-9f873830d221
      triggers:
        - trigger: state
          entity_id:
            - switch.rele_aqara_vodoprovodnye_krany_l1
            - switch.rele_aqara_vodoprovodnye_krany_l2
          to: 'on'
          for: "00:01:00"
      actions:
        action: switch.turn_off
        target:
          entity_id: "{{ trigger.entity_id }}"

    # Software Interlock
    - alias: Valves Relay Software Interlock
      id: f16be388-8c31-43d0-905b-d9c31968414c
      triggers:
        - trigger: state
          entity_id: switch.rele_aqara_vodoprovodnye_krany_l1
          to: "on"
          id: open
        - trigger: state
          entity_id: switch.rele_aqara_vodoprovodnye_krany_l2
          to: "on"
          id: close
      actions:
        - choose:
          - alias: "open_channel_to_on"
            conditions:
              - condition: trigger
                id: "open"
            sequence:
              - if:
                  - "{{ is_state('switch.rele_aqara_vodoprovodnye_krany_l2', 'on') }}"
                then:
                  - action: switch.turn_off
                    target:
                      entity_id: switch.rele_aqara_vodoprovodnye_krany_l2
          - alias: "close_channel_to_on"
            conditions:
              - condition: trigger
                id: "close"
            sequence:
              - if:
                  - "{{ is_state('switch.rele_aqara_vodoprovodnye_krany_l1', 'on') }}"
                then:
                  - action: switch.turn_off
                    target:
                      entity_id: switch.rele_aqara_vodoprovodnye_krany_l1

    # Оповещения
    - alias: Оповещения об активации датчиков [notify to group flat]
      id: 54d437ce-2ec6-4779-93cb-3f36fe99b44c
      triggers:
        - trigger: state
          entity_id: binary_sensor.neptun_water_leakage
          to: "on"
          id: "neptun_on"
        - trigger: state
          entity_id: binary_sensor.0x158d000400e77d_moisture
          from: "off"
          to: "on"
          id: "aqara_storeroom_on"
        - trigger: state
          entity_id: binary_sensor.0x158d0004030d84_moisture
          from: "off"
          to: "on"
          id: "aqara_under_bath_on"
        - trigger: state
          entity_id: binary_sensor.lumi_lumi_sensor_wleak_aq1_ias_zone
          from: "off"
          to: "on"
          id: "aqara_03_near_door"
      actions:
        - choose:
          - alias: "neptun_on"
            conditions:
              - condition: trigger
                id: "neptun_on"
            sequence:
              - action: telegram_bot.send_message
                data:
                  target: !secret tlg_group_flat_1
                  title: "*Внимание!*"
                  message: |
                    Сработал датчик протечки *Нептун*.
                    Водопроводные краны перекрыты!
                    Необходимо проверить Кухню, Ванную, Туалет, Кладовую.
                  inline_keyboard:
                    - 'Открыть краны:/water_valves_open'
          - alias: "aqara_storeroom_on"
            conditions:
              - condition: trigger
                id: "aqara_storeroom_on"
            sequence:
              - action: telegram_bot.send_message
                data:
                  target: !secret tlg_group_flat_1
                  title: "*Внимание!*"
                  message: |
                    Сработал датчик протечки Aqara в *Кладовой*.
                    Водопроводные краны перекрыты!
                    Необходимо проверить наличие воды за стиральной машиной.
                  inline_keyboard:
                    - 'Открыть краны:/water_valves_open'
          - alias: "aqara_under_bath_on"
            conditions:
              - condition: trigger
                id: "aqara_under_bath_on"
            sequence:
              - action: telegram_bot.send_message
                data:
                  target: !secret tlg_group_flat_1
                  title: "*Внимание!*"
                  message: |
                    Сработал датчик протечки Aqara в *Ванной*.
                    Водопроводные краны перекрыты!
                    Необходимо проверить наличие воды *слева под ванной*.
                  inline_keyboard:
                    - 'Открыть краны:/water_valves_open'
          - alias: "aqara_03_near_door"
            conditions:
              - condition: trigger
                id: "aqara_03_near_door"
            sequence:
              - action: telegram_bot.send_message
                data:
                  target: !secret tlg_group_flat_1
                  title: "*Внимание!*"
                  message: |
                    Сработал датчик протечки Aqara в *Ванной*.
                    Водопроводные краны перекрыты!
                    Необходимо проверить наличие воды *рядом с ванной, справа*.
                  inline_keyboard:
                    - 'Открыть краны:/water_valves_open'

    - alias: Оповещение о деактивации Нептуна [notify to group flat]
      id: 344fff46-b0f1-41c3-b6e7-6386b5bc1256
      triggers:
        trigger: state
        entity_id: binary_sensor.neptun_water_leakage
        to: "off"
      actions:
        - action: telegram_bot.send_message
          data:
            target: !secret tlg_group_flat_1
            message: Нептун деактивирован.

    - alias: Оповещение об отключенном Нептуне (>2 мин)
      id: 1a017a47-40b1-4315-892e-36760a8e86ec
      triggers:
        trigger: state
        entity_id: switch.sonoff_1000b68886
        to: 'off'
        for: "00:02:00"
      actions:
        - action: telegram_bot.send_message
          data:
            target: !secret tlg_group_flat_1
            title: "*Внимание!*"
            message: |
              Питание контроллера Нептун отключено более 2х минут!
            inline_keyboard:
              - 'Включить:/neptune_poweron'

    - alias: 'Neptune - Telegram Control - Open'
      id: d42cd9f6-1a89-4116-8348-d99970407b75
      triggers:
        trigger: event
        event_type: telegram_callback
        event_data:
          data: '/neptune_poweron'
      actions:
        - action: switch.turn_on
          target:
            entity_id: switch.sonoff_1000b68886
        - action: telegram_bot.answer_callback_query
          data:
            callback_query_id: '{{ trigger.event.data.id }}'
            message: 'Команда отправлена'
        - action: telegram_bot.edit_message
          data:
            message_id: '{{ trigger.event.data.message.message_id }}'
            chat_id: '{{ trigger.event.data.chat_id }}'
            message: |
              Питание контроллера Нептун отключено более 2х минут!
              Нептун включен.

    - alias: 'Water Valves - Telegram Control - Open'
      id: b5321723-bc10-4146-88a5-7080d0fe70a8
      triggers:
        trigger: event
        event_type: telegram_callback
        event_data:
          data: '/water_valves_open'
      actions:
        - action: script.turn_on
          target:
            entity_id: script.water_valves_open
        - action: telegram_bot.answer_callback_query
          data:
            callback_query_id: '{{ trigger.event.data.id }}'
            message: 'Команда отправлена'
        - action: telegram_bot.edit_replymarkup
          data:
            message_id: '{{ trigger.event.data.message.message_id }}'
            chat_id: '{{ trigger.event.data.chat_id }}'
            inline_keyboard: []
        - alias: "Wait for script.water_valves_open to stop"
          wait_for_trigger:
            - trigger: state
              entity_id: script.water_valves_open
              from: "on"
              to: "off"
          timeout: "00:00:40"
          continue_on_timeout: false
        - action: telegram_bot.send_message
          data:
            target: '{{ trigger.event.data.chat_id }}'
            message: "Водопроводные краны открыты."