#################################################
# System notifications
#################################################

- alias: "HASS: Login Failed [notify to group system]"
  id: 142e502b-3e63-49e3-b790-9150f155dc6d
  mode: queued
  max: 5
  triggers:
    - trigger: state
      entity_id: persistent_notification.http_login
  conditions:
    - condition: template
      value_template: "{{ trigger.to_state.state != off }}"
  actions:
    - action: telegram_bot.send_message
      data:
        target: !secret tlg_group_system
        disable_web_page_preview: true
        message: |
          *Внимание!*
          Неудачная попытка входа, ошибка авторизации!
          Источник: {{ state_attr('persistent_notification.http_login','message') | regex_findall_index('from (.*)\. ') }}
          _http://whatismyipaddress.com/ip/{{ state_attr('persistent_notification.http_login','message') | regex_findall_index('\((.*)\)') }}_
    - action: persistent_notification.dismiss
      data:
        notification_id: http_login

- alias: "HASS: IP Banned [notify to group system]"
  id: ba2318c5-5c2e-4575-aa13-02f53063793d
  mode: queued
  max: 5
  triggers:
    - trigger: state
      entity_id: persistent_notification.ip_ban
  actions:
    - action: telegram_bot.send_message
      data:
        target: !secret tlg_group_system
        disable_web_page_preview: true
        message: |
          *Внимание!*
          Заблокирован IP: {{ state_attr('persistent_notification.ip_ban', 'message').split('Too many login attempts from ')[1] }}
          _http://whatismyipaddress.com/ip/{{ state_attr('persistent_notification.ip_ban', 'message').split('Too many login attempts from ')[1] }}_
    - action: persistent_notification.dismiss
      data:
        notification_id: ip_ban

- alias: "HASS: Home Assistant Start"
  id: 60f94d65-93d1-49e5-94d7-ca58471d02c4
  triggers:
    - trigger: homeassistant
      event: start
  actions:
    - action: homeassistant.update_entity
      target:
        entity_id: sensor.errors_in_system_log_command_line
    - wait_for_trigger:
        - trigger: state
          entity_id: sensor.errors_in_system_log_command_line
      timeout: "00:00:01"
    - action: homeassistant.update_entity
      target:
        entity_id: sensor.warnings_in_system_log_command_line
    - wait_for_trigger:
        - trigger: state
          entity_id: sensor.warnings_in_system_log_command_line
      timeout: "00:00:01"
    - action: notify.telegram_group_system
      data:
        message: |
          _INFO:_ Home Assistant *запущен* за {{ states('sensor.start_time') }} сек.
          Ошибок: *{{ states('sensor.errors_in_system_log_command_line') }}*, Предупреждений: *{{ states('sensor.warnings_in_system_log_command_line') }}*
    - action: script.turn_on
      target:
        entity_id: script.hass_errors_counter_set_at_startup
    - action: script.turn_on
      target:
        entity_id: script.hass_warnings_counter_set_at_startup
    - action: script.turn_on
      target:
        entity_id: script.auto_reboot_by_errors_after_boot

- alias: "HASS: Home Assistant Shutdown"
  id: 44bdbc77-2894-4c80-9739-6c690bde13f9
  triggers:
    trigger: homeassistant
    event: shutdown
  actions:
    - action: input_boolean.turn_on
      data:
        entity_id: input_boolean.ha_shutdown
    - action: notify.telegram_group_system
      data:
        message: "_INFO:_ Home Assistant *остановлен*."

- alias: "HASS: ERRORs in System Log [notify to group system]"
  id: e4140626-d5b1-4a6c-abe1-f99ae0547f0b
  initial_state: false
  triggers:
    trigger: event
    event_type: system_log_event
    event_data:
      level: ERROR
  actions:
    - action: notify.telegram_group_system
      data:
        message: "_{{ trigger.event.data.level }}:_ {{ trigger.event.data.message }}"

- alias: "HASS: WARNINGs in System Log [notify to group system]"
  id: 42541570-874a-46a9-86d0-0db433aaec5b
  initial_state: false
  triggers:
    trigger: event
    event_type: system_log_event
    event_data:
      level: WARNING
  actions:
    - action: notify.telegram_group_system
      data:
        message: "_{{ trigger.event.data.level }}:_ {{ trigger.event.data.message }}"

- alias: "HASS: System Config Errors [notify to group system]"
  id: 3770bcbf-435a-43b2-bfde-b04711e32b61
  triggers:
    - trigger: event
      event_type: call_service
      event_data:
        domain: persistent_notification
        service: create
  conditions:
    - or:
      - condition: template
        value_template: >-
          {{ trigger.event.data.service_data.notification_id == 'homeassistant.check_config' }}
      - condition: template
        value_template: >-
          {{ trigger.event.data.service_data.notification_id == 'invalid_config' }}
  actions:
    - action: notify.telegram_group_system
      data:
        message: |
          *Внимание, конфигурация содержит ошибки!*
          {% if trigger.event.data.service_data.notification_id == 'homeassistant.check_config' -%}
          Перезапуск HA отменён, подробности в логах.
          {% elif trigger.event.data.service_data.notification_id == 'invalid_config' -%}
          {{ trigger.event.data.service_data.message }}
          {% endif %}
    - action: persistent_notification.dismiss
      data:
        notification_id: >-
          {{ trigger.event.data.service_data.notification_id }}

- alias: "HASS: ERRORs in Automations [notify to group system]"
  id: 67d49afb-cac6-45e2-99b0-0ad5904d84b2
  mode: queued
  triggers:
    - trigger: event
      event_type: system_log_event
      event_data:
        level: ERROR
  conditions:
    - condition: template
      value_template: >-
        {{ 
          trigger.event.data.message | regex_search('Error while executing automation') or
          trigger.event.data.message | regex_search('Error executing script')
        }}
  actions:
    - action: telegram_bot.send_message
      data:
        target: !secret tlg_group_system
        parse_mode: html
        message: |
          <i>INFO:</i> Ошибка выполнения автоматизации: 
          {{ trigger.event.data.message }}.

- alias: "HASS: Critical Error [notify to group system]"
  id: d70721b8-e0f2-415a-b917-331781a463ee
  mode: queued
  triggers:
    - trigger: event
      event_type: system_log_event
      event_data:
        level: FATAL
    - trigger: event
      event_type: system_log_event
      event_data:
        level: CRITICAL
  actions:
    - action: telegram_bot.send_message
      data:
        target: !secret tlg_group_system
        parse_mode: html
        message: |
          Критическая ошибка системы:
          {{ trigger.event.data.message }}!

#- alias: "HASSIO: New Version Available [notify to group system]"
#  id: 4f0d8495-8abd-4513-9348-7630c5576088
#  triggers:
#    trigger: template
#    value_template: "{{ states('sensor.current_version') < states('sensor.latest_version') }}"
#  actions:
#    action: notify.telegram_group_system
#    data:
#      message: "_INFO:_ Доступна новая версия Home Assistant ({{ states('sensor.latest_version') }})"

#- alias: "HASSIO: New Home Assistant OS Version Available [notify to group system]"
#  id: e1febbae-54ca-44b3-b808-83f74f29bf36
#  triggers:
#    trigger: template
#    value_template: "{{ states('sensor.home_assistant_operating_system_version') < states('sensor.home_assistant_operating_system_newest_version') }}"
#  actions:
#    action: notify.telegram_group_system
#    data:
#      message: "_INFO:_ Доступна новая версия Home Assistant OS ({{ states('sensor.home_assistant_operating_system_newest_version') }})"

#- alias: "HASSIO: New Addons Update Available [notify to group system]"
#  id: 19295cc3-b128-4b64-925a-ffde2688cf9c
#  triggers:
#    - trigger: state
#      entity_id: binary_sensor.updater_addons
#      from: "off"
#      to: "on"
#  conditions:
#    - condition: template
#      value_template: "{{ states('sensor.supervisor_updates') | int > 0 }}"
#  actions:
#    - action: notify.telegram_group_system
#      data:
#        message: |
#          _INFO:_ Доступны новые версии Add-ons (Supervisor) ({{ states('sensor.supervisor_updates') }}):
#          {%- for repo in state_attr('sensor.supervisor_updates', 'addons') %}
#          {{ repo.name }} (_{{ repo.version }}_ -> _{{ repo.version_latest }}_){% if not loop.last %}, {% endif %}
#          {%- endfor -%}

#- alias: "HASSIO: New Supervisor Version Available [notify to group system]"
#  id: 80b629d2-3441-467b-ad60-dd49de9f8703
#  triggers:
#    - trigger: state
#     from: "off"
#      to: "on"
#  actions:
#    - action: notify.telegram_group_system
#      data:
#        message: "_INFO:_ Доступна новая версия Supervisor ({{ state_attr('sensor.supervisor_updates', 'newest_version') }})"

#- alias: "HACS: New Component Version Available [notify to group system]"
#  id: 4bc5609a-1e8b-4e66-944a-e613bcaad6d2
#  triggers:
#    trigger: state
#    entity_id: sensor.hacs
#  conditions:
#    - condition: template
#      value_template: "{{ (states('sensor.hacs') | int) > 0 }}"
#  actions:
#    action: notify.telegram_group_system
#    data:
#      message: |
#        _INFO:_ Доступны новые версии Custom Components (HACS) ({{ states('sensor.hacs') }}):
#        {%- for repo in state_attr('sensor.hacs', 'repositories') %}
#        {{ repo.display_name }} (_{{ repo.installed_version }}_ -> _{{ repo.available_version }}_){% if not loop.last %}, {% endif %}
#        {%- endfor -%}

- alias: "HA: Update Entities Notifications"
  id: d69b4310-532c-4cda-9a77-3434e6319fef
  mode: queued
  max: 50
  max_exceeded: silent
  triggers:
    - trigger: event
      event_type: state_changed
  conditions:
    - "{{ trigger.event.data.entity_id.startswith('update.') }}"
    - "{{ trigger.event.data.old_state is not none and trigger.event.data.new_state is not none }}"
    - or:
        - condition: template
          value_template: >
            {% set ignore = ['unknown', 'unavailable', 'none', None, null, ''] %}
              {{ 
                trigger.event.data.new_state.state == 'on' and
                (version(trigger.event.data.new_state.attributes.latest_version) != version(trigger.event.data.old_state.attributes.latest_version) or
                version(trigger.event.data.new_state.attributes.latest_version) > version(trigger.event.data.old_state.attributes.latest_version)) and
                trigger.event.data.new_state.attributes.latest_version not in ignore and
                trigger.event.data.new_state.attributes.latest_version is not none
              }}
        - condition: template
          value_template: >
            {% set ignore = ['unknown', 'unavailable', 'none', None, null, ''] %}
              {{ 
                trigger.event.data.old_state.state == 'on' and trigger.event.data.new_state.state == 'off' and
                (version(trigger.event.data.new_state.attributes.installed_version) != version(trigger.event.data.old_state.attributes.installed_version) or
                version(trigger.event.data.new_state.attributes.installed_version) > version(trigger.event.data.old_state.attributes.installed_version)) and
                trigger.event.data.new_state.attributes.installed_version not in ignore and
                trigger.event.data.new_state.attributes.installed_version is not none
              }}
  actions:
    - variables:
        latest_version: "{{ trigger.event.data.new_state.attributes.latest_version }}"
        installed_version: "{{ state_attr(trigger.event.data.entity_id, 'installed_version') }}"
        old_installed_version: "{{ trigger.event.data.old_state.attributes.installed_version }}"
        friendlyname: "{{- trigger.event.data.new_state.name | regex_replace('( Update$| Firmware$| Обновление прошивки$)', '', True) -}}"
    - if:
        - condition: template
          value_template: "{{ trigger.event.data.new_state.attributes.installed_version != trigger.event.data.old_state.attributes.installed_version }}"
      then:
        - action: telegram_bot.send_message
          data:
            target: !secret tlg_group_system
            parse_mode: html
            message: |
              <i>INFO:</i> <b>{{ friendlyname }}</b> - обновлен (<i>{{ old_installed_version }}</i> -> <i>{{ latest_version }}</i>).
      else:
        - action: telegram_bot.send_message
          data:
            target: !secret tlg_group_system
            parse_mode: html
            message: |
              <i>INFO:</i> <b>{{ friendlyname }}</b> - доступно обновление (<i>{{ installed_version }}</i> -> <i>{{ latest_version }}</i>).

- alias: "Device Needs Attention [notify to group system]"
  id: 89bb378c-13b5-4051-bd08-3f226dbc8834
  mode: queued
  max: 30
  triggers:
    - trigger: event
      event_type: state_changed
  conditions:
    - condition: template
      value_template: >-
        {{ states('input_boolean.ha_shutdown') == 'off' }}
    - condition: template
      value_template: >-
        {{ states('sensor.ha_uptime') > '1' }}
    - condition: template
      value_template: >-
        {{ not trigger.event.data.entity_id | regex_search
          (
          '^group.battery_devices$|'
          '^binary_sensor.lamp_status_|'
          '^sensor.lamp_status_|'
          '^sensor.mirobot_1s_|'
          '^sensor.xiaomi_vacuum_cleaner_|'
          '^switch.smartir_|'
          '^sensor.openweathermap_|'
          '.*\.smartmi_humidifier_\d{2}_\w+|'
          '^sensor\.tplink_smartplug_01_|'
          '^sensor\.gosund_sp111_\d{2}_|'
          '^(switch|button)\.gosund_sp111_\d{2}_restart|'
          '^sensor\..*_ble|'
          '^(binary_sensor|switch)\.domofon_|'
          '^(binary_sensor|sensor|light)\.sonoff_basic_|'
          '^(binary_sensor|sensor)\.sonoff_mini_r2_|'
          '^(switch|button)\.(esp32_miscale2|esp32_bt_proxy)_\d{2}_restart.*|'
          '^sensor\.xiaomi_mi_scale_2_.*|'
          '^number\..*_(min|max)_weight|'
          '^button\..*_identify|'
          '^sensor\..*_(weight_current|current_weight)|'
          '^sensor\..*_(impedance_current|current_impedance)|'
          '^media_player\.plex_.*|'
          '^(binary_sensor|sensor|switch|button)\.reolinkcam_(01|02)_.*|'
          '.*ed5e33eb_0ca3_4263_a681_a68b1045a5e6.*|'
          '^sensor\.oneplus_8t_ibeacon_.*|'
          '^binary_sensor\..*_oneplus_8t_presence$|'
          '^binary_sensor\..*_holy_iot_.*_presence$|'
          '^binary_sensor\..*_nut_gray_1_presence$|'
          '^binary_sensor\..*_amazfit_gtr_4_presence$|'
          '^.*\.nas01_.*|'
          '^vacuum\.xiaomi_vacuum_cleaner$|'
          '^sensor\.esp32_bt_proxy_\d{2}_rssi$|'
          '^sensor\..*_estimated_distance$|'
          '^(sensor|number|switch|button|binary_sensor)\.galaxy_tab_a_8_0_2019_.*$|'
          '^camera\.reolinkcam_01_rtsp.*$|'
          '^(sensor|binary_sensor|button|switch)\.shellyem_.*|'
          '^sensor\.ch_main_energy_.*|'
          '^sensor\..*_geocoded_location$|'
          '^sensor\.double_take_.*|'
          '^sensor\.processor_use$|'
          '^binary_sensor\.avb0r$|'
          '^sensor\.dacha_nearest_.*|'
          '^sensor\.dacha_.*_di.*|'
          '^(media_player|remote)\.xbox_ch_01|'
          '^(media_player|remote)\.xbox_v_gostinoi|'
          '^sensor\..*_sonoff_pow_r3_0._power_factor$'
          )
        }}
    - condition: template
      value_template: >-
        {{ trigger.event.data.new_state.state != trigger.event.data.old_state.state }}
    - condition: template
      value_template: >-
        {{ trigger.event.data.new_state.state in ['unknown', 'unavailable'] }}
  actions:
    - condition: template
      value_template: "{{ states('input_boolean.ha_shutdown') == 'off' }}"
    - action: telegram_bot.send_message
      data:
        target: !secret tlg_group_system
        parse_mode: html
        disable_notification: true
        message: |
          <i>INFO</i>: Объект {{ trigger.event.data.entity_id }} сменил статус на {{ trigger.event.data.new_state.state }}.

- alias: "Low Battery Alert [notify to group system]"
  id: 6d87e0a2-8a6b-4b20-bd28-900af1620584
  mode: queued
  max: 30
  triggers:
    - trigger: event
      event_type: state_changed
  conditions:
    - condition: template
      value_template: >-
        {{ not trigger.event.data.entity_id | regex_search
          (
          '^sensor\.galaxy_tab_a_8_0_2019_battery'
          )
        }}
    - condition: template
      value_template: >-
        {{ trigger.event.data.entity_id in (expand('group.battery_devices') | map(attribute='entity_id')) }}
    - condition: template
      value_template: >-
        {{ not trigger.event.data.new_state.state in ['unknown', 'unavailable'] }}
    - condition: template
      value_template: >-
        {{ (trigger.event.data.new_state.state | int) < (states('input_number.low_battery_alert_threshold') | int) }}
  actions:
    - action: telegram_bot.send_message
      data:
        target: !secret tlg_group_system
        parse_mode: html
        title: "<b>Внимание, низкий заряд батареи!</b>"
        message: |
          {{ trigger.event.data.new_state.attributes.friendly_name }}: {{ trigger.event.data.new_state.state }} %!

- alias: New Network Device Notification
  id: 7e5b4f9a-eb87-487f-8e1a-4b980de13734
  mode: parallel
  triggers:
    trigger: event
    event_type: device_tracker_new_device
  actions:
    - action: telegram_bot.send_message
      data:
        target: !secret tlg_group_system
        parse_mode: html
        title: <b>Найдено новое устройство в сети!</b>
        message: |
          MAC: {{ trigger.event.data.mac }}

- alias: "Auto Backup Completed [notify to group system]"
  id: fef0c4de-e2ba-419b-b49e-ff39449e6481
  triggers:
    trigger: event
    event_type: auto_backup.backup_successful
  actions:
    - action: telegram_bot.send_message
      data:
        target: !secret tlg_group_system
        parse_mode: html
        message: |
          <i>INFO:</i> Создание резервной копии завершилось успешно.
          Имя: {{ trigger.event.data.name }}

- alias: "Auto Backup Failure [notify to group system]"
  id: 24f2bb2c-3e2c-47b5-ba9a-a92f0f5bf63a
  triggers:
    trigger: event
    event_type: auto_backup.backup_failed
  actions:
    - action: telegram_bot.send_message
      data:
        target: !secret tlg_group_system
        parse_mode: html
        title: "<b>Внимание!</b>"
        message: |
          Создание резервной копии завершилось ошибкой.
          Имя: {{ trigger.event.data.name }}
          Ошибка: {{ trigger.event.data.error }}
