#################################################
# Telegram Bot Automations
#################################################

# ---- Mirror all text messages
- alias: "Telegram Bot - Mirror text"
  id: d35faec4-c949-4358-8aff-00e11b560444
  trigger:
    platform: event
    event_type: telegram_text
  action:
    service: notify.telegram_group_system
    data_template:
      message: |
        *{{ trigger.event.data.from_first }} {{ trigger.event.data.from_last }} [{{ trigger.event.data.user_id }}] пишет:*
        {{ trigger.event.data.text }}
# ---- /start
- alias: "Telegram Bot - Start"
  id: d50c7e2c-9f67-40f2-9495-41ba1140c9b5
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/start"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/start@HAutoBot"
  action:
    service: telegram_bot.send_message
    data_template:
      target: "{{ trigger.event.data.user_id }}"
      message: "Привет! Помощь - /help"
# ---- /help
- alias: "Telegram Bot - Help"
  id: 1e265eea-3d26-4a04-8402-f25a828f841d
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/help"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/help@HAutoBot"
  action:
    service: telegram_bot.send_message
    data_template:
      target: "{{ trigger.event.data.user_id }}"
      parse_mode: html
      message: |
        Доступные комманды:
        /status - Текущий статус устройств
        /whoishome - Кто дома?
        /weather - Погода дома
        /weather_ch - Погода на даче
        /ping - Проверить доступность сервиса HASS
# ---- /ping
- alias: "Telegram Bot - Ping"
  id: 936c648b-18b6-4636-a941-cc3f3361fdd0
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/ping"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/ping@HAutoBot"
  action:
    service: telegram_bot.send_message
    data_template:
      target: "{{ trigger.event.data.user_id }}"
      message: |
        Pong! _{{ now().strftime("%d.%m.%Y %H:%M:%S") }}_
        Current version: {{ states('sensor.current_version') }}
        DB Size: {{ states('sensor.hass_db_size') }} {{ state_attr('sensor.hass_db_size','unit_of_measurement') }}
        Uptime: {{ states('sensor.ha_uptime') }} min.
# ---- /whoishome
- alias: "Telegram Bot - Who is home?"
  id: f3af5ecc-3eb8-4542-8207-97f90b6f5abf
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/whoishome"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/whoishome@HAutoBot"
  action:
    service: telegram_bot.send_message
    data_template:
      target: "{{ trigger.event.data.chat_id }}"
      message: |
        Сейчас дома:
        {%- set entites = expand('group.family_persons') %}{% for prs in entites %}{% if prs.state == "home" %}
        {{ prs.attributes.friendly_name }}{% endif %}{% endfor %}
        {% if is_state("group.family_persons", "not_home") %}Никого нет{% endif %}
# ---- /weather
- alias: "Telegram Bot - Weather"
  id: b0b0a539-14fb-440c-b57c-269460961819
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/weather"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/weather@HAutoBot"
  action:
    - service: telegram_bot.send_photo
      data_template:
        target: "{{ trigger.event.data.user_id }}"
        file: '/config/www/weather_icons/{{ states("weather.yandex_weather_danilovskii") }}.webp'
        caption: |
          Температура {{ states('sensor.yandex_weather_danilovskii_temperature') }}°C
          Ощущается как {{ states('sensor.yandex_weather_danilovskii_feels_like_temperature') }}°C
          Влажность {{ states('sensor.yandex_weather_danilovskii_humidity') }}%
          Давление {{ states('sensor.yandex_weather_danilovskii_pressure') }} hPa ({{ states('sensor.yandex_weather_danilovskii_pressure_mmhg') }} mmHg)
# ---- /weather_ch
- alias: "Telegram Bot - Weather Country House"
  id: c5ac3f4b-80b8-479f-96bf-45274aeba2ec
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/weather_ch"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/weather_ch@HAutoBot"
  action:
    - service: telegram_bot.send_photo
      data_template:
        target: "{{ trigger.event.data.user_id }}"
        file: '/config/www/weather_icons/{{ states("weather.yandex_weather_nivki_2") }}.webp'
        caption: |
          Температура {{ states('sensor.yandex_weather_nivki_2_temperature') }}°C
          Ощущается как {{ states('sensor.yandex_weather_nivki_2_feels_like_temperature') }}°C
          Влажность {{ states('sensor.yandex_weather_nivki_2_humidity') }}%
          Давление {{ states('sensor.yandex_weather_nivki_2_pressure') }} hPa ({{ states('sensor.yandex_weather_nivki_2_pressure_mmhg') }} mmHg)
# ---- /status
- alias: "Telegram Bot - Status"
  id: 51572bf5-4960-4034-b09a-17d202c07c18
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/status"
    - platform: event
      event_type: telegram_command
      event_data:
        command: "/status@HAutoBot"
  action:
    service: telegram_bot.send_message
    data_template:
      target: "{{ trigger.event.data.user_id }}"
      message: |
        *Климат*
        Гостинная: *{{ states('sensor.temperature_in_livingroom') }}°C*, {{ states('sensor.humidity_in_livingroom') }}%
        Детская: *{{ states('sensor.temperature_in_nursery') }}°C*, {{ states('sensor.humidity_in_nursery') }}%
        Спальня: *{{ states('sensor.temperature_in_bedroom') }}°C*, {{ states('sensor.humidity_in_bedroom') }}%
        Ванная: *{{ states('sensor.temperature_in_bathroom') }}°C*, {{ states('sensor.humidity_in_bathroom') }}%
        Туалет: *{{ states('sensor.temperature_in_toilet') }}°C*, {{ states('sensor.humidity_in_toilet') }}%
        Кладовая: *{{ states('sensor.temperature_in_storeroom') }}°C*, {{ states('sensor.humidity_in_storeroom') }}%

        *Статус устройств*
        `-= Датчики протечки =-`
        Нептун (кладовая, туалет, ванна, кухня): *{{ states('binary_sensor.neptun_water_leakage') }}*
        Aqara кладовая: *{{ states('binary_sensor.0x158d000400e77d_moisture') }}*
        Aqara под ванной (слева): *{{ states('binary_sensor.0x158d0004030d84_moisture') }}*
        Aqara справа от ванной: *{{ states('binary_sensor.lumi_lumi_sensor_wleak_aq1_ias_zone') }}*
        `-= Вытяжка =-`
        Ванная: *{{ states('binary_sensor.bathroom_extractor_fan') }}*
        Туалет: *{{ states('binary_sensor.toilet_extractor_fan') }}*
        `-= Кондиционеры =-`
        Детская: *{{ states('binary_sensor.0x158d00039cf974_contact') }}*
        Гостинная: *{{ states('binary_sensor.0x158d0003d54725_contact') }}*
        Спальня: *{{ states('binary_sensor.0x158d0004073b67_contact') }}*
        `-= Крупная бытовая техника =-`
        Водонагреватель: *{{ states('binary_sensor.boiler_status') }}* ({{ states('sensor.tplink_smartplug_01_current_consumption') }} W)
        Стиральная машина: *{{ states('binary_sensor.washer_status') }}* ({{ states('sensor.tplink_smartplug_02_current_consumption') }} W)
        Сушильная машина: *{{ states('binary_sensor.dryer_status') }}* ({{ states('sensor.gosund_sp111_09_watt') }} W)
        Посудомоечная машина: *{{ states('binary_sensor.dishwasher_status') }}* ({{ states('sensor.gosund_sp111_06_watt') }} W)
        Холодильник: *{{ states('binary_sensor.fridge_status') }}* ({{ states('sensor.gosund_sp111_04_watt') }} W)
        Духовой шкаф: *{{ states('binary_sensor.oven_status') }}* ({{ states('sensor.gosund_sp111_10_watt') }} W)
        `-= Свет =-`
        Споты в прихожей: *{{ states('light.sonoff_1000f2f14a') }}*
        Споты в коридоре: *{{ states('light.sonoff_1000f2a500') }}*
        Люстра в детской: *{{ states('light.ikea_e27_detskaia') }}*
        Подсветка окна в детской: *{{ states('light.detskaia_podsvetka_na_okne') }}*
        Лампа на столе в детской слева: *{{ states('light.ikea_e14_level_light_color_on_off') }}*
        Лампа на столе в детской справа: *{{ states('light.ikea_of_sweden_tradfri_bulb_e14_ws_opal_600lm_light') }}*
        Люстра в гостиной: *{{ states('light.sonoff_1000f3035d') }}*
        Споты в гостиной: *{{ states('light.sonoff_1000f30a9e') }}*
        Бра в гостиной: *{{ states('light.sonoff_1000ab3c28') }}*
        Подсветка онка в гостиной: *{{ states('light.gostinaia_podsvetka_na_okne') }}*
        Лампа на столе в гостиной: *{{ states('light.ikea_e27_level_light_color_on_off') }}*
        Споты на кухне: *{{ states('light.sonoff_1000b72483') }}*
        Подсветка кухни: *{{ states('light.kukhnia_lenta') }}*
        Люстра на кухне: *{{ states('light.ikea_e27_kukhnia') }}*
        Споты в Ванной: *{{ states('light.sonoff_zbmini_04_on_off') }}*
        Споты в Туалете: *{{ states('light.sonoff_zbmini_03_on_off') }}*
        Люстра в кладовой: *{{ states('light.sonoff_1000b6831b') }}*
        Люстра в спальне: *{{ states('light.sonoff_1001053235') }}*
        Бра в спальне - лево: *{{ states('light.sonoff_01minizb_47ef08fe_on_off') }}*
        Бра в спальне - право: *{{ states('light.sonoff_1001045426') }}*
        Лампа на столе в спальне: *{{ states('light.spalnia_stol') }}*
        `-= Шторы =-`
        Кухня - левая: *{{ states('cover.tze200_rddyvrci_ts0601_5c2fbdfe_window_covering') }}*
        Кухня - правая: *{{ states('cover.tze200_rddyvrci_ts0601_df30bdfe_window_covering') }}*
        `-= Розетки =-`
        Розетка Xiaomi WiFi Plug 01: *{{ states('switch.mi_smartplugwifi_01') }}*
        `-= ТВ =-`
        Спальня: *{{ states('media_player.ue43ru7470') }}*
        Гостинная: *{{ states('media_player.ue46es5507') }}*
        Кухня: *{{ states('media_player.ue32es5500') }}*
        Детская: *{{ states('binary_sensor.samsungtv_40c5100') }}*
        `-= Chromecast =-`
        Гостинная: *{{ states('media_player.gostinaia') }}*
        Детская: *{{ states('media_player.detskaia') }}*
        `-= Yandex =-`
        Прихожая: *{{ states('media_player.yandex_station_lite_prikhozhaya') }}*
        Детская: *{{ states('media_player.yandex_station_lite_detskaia') }}*
        Гостинная: *{{ states('media_player.yandex_station_mini2_gostinaia') }}*
        Спалья: *{{ states('media_player.yandex_station_mini2_spalnia') }}*
        `-= Разное =-`
        Входная дверь: *{{ states('sensor.entrance_door_status') }}*
        Датчик газа: *{{ states('binary_sensor.0x00158d000413b210_gas') }}*
        Датчик газа (питание): *{{ states('switch.blitzwolf_shp13_02_3ad702fe_on_off') }}*
        Mi Robot: *{{ states('vacuum.xiaomi_vacuum_cleaner') }}*
        Transmission Status: *{{ states('sensor.transmission_status') }}*
        Plex Users: *{{ states('sensor.plex_plexonubuntu') }}*
